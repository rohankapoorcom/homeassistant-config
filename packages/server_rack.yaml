###############################################################################
#  @author       :  Rohan Kapoor
#  @date         :  05/07/2022
#  @package      :  Server Rack
#  @description  :  Manages functionality within the Server Rack
###############################################################################
---
homeassistant:
  customize:
    ################################################
    ## Node Anchors
    ################################################

    package.node_anchors:
      customize: &customize
        package: 'server_rack'

################################################
## Sensor
################################################
sensor:
  - platform: snmp
    host: !secret snmp.ups.host
    version: 2c
    community: !secret snmp.ups.community
    baseoid: .1.3.6.1.4.1.850.1.1.3.1.2.1.1.8.1
    unit_of_measurement: "°F"
    state_class: measurement
    device_class: temperature
    name: "UPS Battery Temperature"
    unique_id: e87c88df-051f-4e3d-8356-2ee4329ddd44
    value_template: "{{ value | float(0) / 10.0 }}"

  - platform: snmp
    host: !secret snmp.ups.host
    version: 2c
    community: !secret snmp.ups.community
    baseoid: .1.3.6.1.4.1.850.1.1.3.3.3.1.1.2.2
    unit_of_measurement: "°F"
    state_class: measurement
    device_class: temperature
    name: "UPS EnviroSense Temperature"
    unique_id: a4492886-ba49-4c7d-b459-14cf652e162c
    value_template: "{{ value | float(0) / 10.0 }}"

  - platform: snmp
    host: !secret snmp.ups.host
    version: 2c
    community: !secret snmp.ups.community
    baseoid: .1.3.6.1.4.1.850.1.1.3.3.3.2.1.1.2
    unit_of_measurement: "%"
    state_class: measurement
    device_class: humidity
    name: "UPS EnviroSense Humidity"
    unique_id: 61b212ee-2c0d-499c-a5c2-de0628ab18a4

  - platform: snmp
    host: !secret snmp.ups.host
    version: 2c
    community: !secret snmp.ups.community
    baseoid: .1.3.6.1.2.1.33.1.2.5.0
    unit_of_measurement: "V"
    state_class: measurement
    device_class: voltage
    name: "UPS Battery Voltage"
    unique_id: fe9cdcea-009e-442b-b5f5-86e3700dd69e
    value_template: "{{ value | float(0) / 10.0 }}"

  - platform: snmp
    host: !secret snmp.ups.host
    version: 2c
    community: !secret snmp.ups.community
    baseoid: .1.3.6.1.2.1.33.1.2.4.0
    unit_of_measurement: "%"
    state_class: measurement
    device_class: battery
    name: "UPS Battery Capacity"
    unique_id: 588231eb-5e47-42ef-aa10-b21f641bac9d

  - platform: snmp
    host: !secret snmp.ups.host
    version: 2c
    community: !secret snmp.ups.community
    baseoid: .1.3.6.1.2.1.33.1.2.3.0
    unit_of_measurement: "min"
    state_class: measurement
    device_class: duration
    name: "UPS Runtime Remaining"
    unique_id: f4e076cb-9827-4c93-8c26-d97fe9aaf857

  - platform: snmp
    host: !secret snmp.ups.host
    version: 2c
    community: !secret snmp.ups.community
    baseoid: .1.3.6.1.2.1.33.1.3.3.1.3.1
    unit_of_measurement: "V"
    state_class: measurement
    device_class: voltage
    name: "UPS AC Input Voltage"
    unique_id: 7799c1a0-eb2a-422f-b83f-f66e65c8949b

  - platform: snmp
    host: !secret snmp.ups.host
    version: 2c
    community: !secret snmp.ups.community
    baseoid: .1.3.6.1.2.1.33.1.4.4.1.2.1
    unit_of_measurement: "V"
    state_class: measurement
    device_class: voltage
    name: "UPS Output Voltage"
    unique_id: c9c6acdb-c653-4f84-a7cd-7bb48018d70e

  - platform: snmp
    host: !secret snmp.ups.host
    version: 2c
    community: !secret snmp.ups.community
    baseoid: .1.3.6.1.4.1.850.1.1.3.1.3.3.2.1.5.1.1
    unit_of_measurement: "%"
    name: "UPS Load"
    unique_id: b659a5db-480d-4a32-88d0-8e6223f73c57

  - platform: snmp
    host: !secret snmp.ups.host
    version: 2c
    community: !secret snmp.ups.community
    baseoid: .1.3.6.1.4.1.850.1.1.3.1.3.3.2.1.3.1.1
    unit_of_measurement: "A"
    state_class: measurement
    device_class: current
    name: "UPS Output Current"
    unique_id: c56e6f4f-ab46-4f17-a54e-71160d7f129c
    value_template: "{{ value | float(0) / 100.0 }}"

  - platform: snmp
    host: !secret snmp.ups.host
    version: 2c
    community: !secret snmp.ups.community
    baseoid: .1.3.6.1.4.1.850.1.1.3.1.3.1.1.1.1.1
    name: "UPS Battery Status"
    unique_id: f3380d1f-2126-408e-a24d-5209b4141e32
    value_template: >
          {% if value | int == 1 %}
            Unknown
          {% elif value | int == 2 %}
            Normal
          {% elif value | int == 3 %}
            Battery Low
          {% elif value | int == 4 %}
            Battery Depleted
          {% else %}
            Communication Failure
          {% endif %}

  - platform: snmp
    host: !secret snmp.ups.host
    version: 2c
    community: !secret snmp.ups.community
    baseoid: .1.3.6.1.4.1.850.1.1.3.1.3.1.2.1.4.1
    name: "UPS Battery Charge Details"
    unique_id: 84e2bcae-5185-43e3-ab75-73c10b118976
    value_template: >
          {% if value | int == 0 %}
            Float
          {% elif value | int == 1 %}
            Charging
          {% elif value | int == 2 %}
            Resting
          {% elif value | int == 3 %}
            Discharging
          {% elif value | int == 4 %}
            Normal
          {% elif value | int == 5 %}
            Standby
          {% else %}
            Communication Failure
          {% endif %}

  - platform: snmp
    host: !secret snmp.ups.host
    version: 2c
    community: !secret snmp.ups.community
    baseoid: .1.3.6.1.4.1.850.1.1.3.1.3.3.1.1.1.1
    name: "UPS Source"
    unique_id: 5d7f500d-cb6f-4eb6-bb58-aa69e40779a4
    value_template: >
          {% if value | int == 0 %}
            Unknown
          {% elif value | int == 1 %}
            Other
          {% elif value | int == 2 %}
            None
          {% elif value | int == 3 %}
            AC Input
          {% elif value | int == 4 %}
            Bypass
          {% elif value | int == 5 %}
            Battery
          {% elif value | int == 6 %}
            Boosting
          {% elif value | int == 7 %}
            Reducing
          {% elif value | int == 8 %}
            Second
          {% elif value | int == 9 %}
            Economy
          {% else %}
            Communication Failure
          {% endif %}

template:
  - sensor:
      - state: >
          {{ ((states('sensor.server_rack_backup_remain') | as_timestamp - as_timestamp(now())) / 60) | int }}
        unique_id: 44a898ad-76f8-4b4a-8897-2eb7dc2d3e31
        attributes:
          friendly_name: >
            {%- if is_state('binary_sensor.server_rack_backup_charging', 'on') -%}
              Charge Time
            {%- else -%}
              Runtime
            {%- endif -%}
        unit_of_measurement: "minutes"
        state_class: measurement
      - name: "Server Rack Backup Power Source"
        state: >
          {%- set ac_state = states('sensor.server_rack_backup_ac_input') -%}
          {%- set dc_state = states('sensor.server_rack_backup_dc_input') -%}
          {%- if (is_number(ac_state) and ac_state | float > 0)
              and (is_number(dc_state) and dc_state | float > 0) -%}
            AC/DC Input
          {%- elif (is_number(ac_state) and ac_state | float > 0) -%}
            AC Input
          {%- elif (is_number(dc_state) and dc_state | float > 0) -%}
            DC Input
          {%- else -%}
            Battery
          {%- endif -%}
        unique_id: 9cf68e6d-e36e-47cf-a216-99fd474a6e99

automation:
  - id: '1701157132714'
    alias: Update Server Rack Status Display
    description: Display server rack climate controls status on the epaper displays
    triggers:
      - trigger: time_pattern
        minutes: /10
    actions:
      - action: open_epaper_link.drawcustom
        data:
          background: white
          rotate: 0
          ttl: 300
          dither: false
          payload:
            - type: line
              fill: red
              width: 5
              x_start: 0
              y_start: 40
              x_end: 400
              y_end: 40
            - type: line
              fill: red
              width: 10
              x_start: 200
              y_start: 40
              x_end: 200
              y_end: 270
            - type: line
              fill: red
              width: 5
              x_start: 0
              y_start: 270
              x_end: 400
              y_end: 270
            - type: text
              value: Server Rack
              font: ppb.ttf
              x: 200
              y: 5
              size: 40
              color: red
              anchor: mt
            - type: text
              value: Current
              font: ppb.ttf
              x: 100
              y: 170
              size: 40
              color: red
              anchor: mm
            - type: icon
              value: thermometer
              x: 45
              y: 85
              size: 40
              color: black
            - type: text
              value: '{{ states(''sensor.server_rack_exhaust_fan_temperature_1'') | round
                }}°F'
              font: ppb.ttf
              x: 125
              y: 105
              size: 40
              color: black
              anchor: mm
            - type: icon
              value: water-percent
              x: 50
              y: 215
              size: 40
              color: black
            - type: text
              value: '{{ states(''sensor.server_rack_exhaust_fan_humidity_1'') | round }}%'
              font: ppb.ttf
              x: 125
              y: 235
              size: 40
              color: black
              anchor: mm
            - type: text
              value: Target
              font: ppb.ttf
              x: 300
              y: 170
              size: 40
              color: red
              anchor: mm
            - type: icon
              value: thermometer
              x: 245
              y: 85
              size: 40
              color: black
            - type: text
              value: '{{ state_attr(''climate.server_rack_exhaust_fan_fan_1_thermostat'',
                ''temperature'') | round }}°F'
              font: ppb.ttf
              x: 325
              y: 105
              size: 40
              color: black
              anchor: mm
            - type: icon
              value: fan
              x: 240
              y: 215
              size: 40
              color: black
            - type: text
              value: '{{ states(''sensor.server_rack_exhaust_fan_fan_1_speed'') | round
                }}%'
              font: ppb.ttf
              x: 325
              y: 235
              size: 40
              color: black
              anchor: mm
            - type: text
              value: As of {{ now().strftime('%m/%d/%Y at %I:%M %p') }}
              font: ppb.ttf
              x: 200
              y: 290
              size: 15
              color: black
              anchor: mm
        target:
          device_id:
            - a07813b027de345048bdf12eaf51eb10
    mode: restart

  - id: 2c8ca4d5-b0e5-48c9-9a6d-a3cd60d2a449
    alias: 'Server Rack Battery Power Alert'
    description: >-
      Notifies when server rack switches to battery power for more than 10 minutes.
      Monitors server rack backup and UPS power source sensors.
    mode: single
    triggers:
      - trigger: state
        entity_id: sensor.server_rack_backup_power_source
        to: 'Battery'
        for:
          minutes: 10
      - trigger: state
        entity_id: sensor.ups_source
        to: 'Battery'
        for:
          minutes: 10
    conditions:
      - alias: "Safety check: Verify at least one sensor is on battery power to prevent false notifications"
        condition: template
        value_template: >-
          {% set server_rack_battery = is_state('sensor.server_rack_backup_power_source', 'Battery') %}
          {% set ups_battery = is_state('sensor.ups_source', 'Battery') %}
          {{ server_rack_battery or ups_battery }}
    actions:
      - action: notify.rohan_kapoor
        data:
          title: 'Server Rack Battery Power Alert'
          message: >-
            {% set server_rack_battery = is_state('sensor.server_rack_backup_power_source', 'Battery') %}
            {% set ups_battery = is_state('sensor.ups_source', 'Battery') %}
            {% if server_rack_battery and ups_battery %}
              ⚠️ BOTH Server Rack Backup AND UPS are on battery power for 10+ minutes!
            {% elif server_rack_battery %}
              ⚠️ Server Rack Backup Power Source switched to battery for 10+ minutes!
            {% elif ups_battery %}
              ⚠️ UPS switched to battery power for 10+ minutes!
            {% endif %}

            Current Status:
            • Server Rack Backup: {{ states('sensor.server_rack_backup_power_source') }}
            • UPS Source: {{ states('sensor.ups_source') }}

            Battery Information:
            • UPS Battery Capacity: {{ states('sensor.ups_battery_capacity') }}%
            • UPS Runtime Remaining: {{ states('sensor.ups_runtime_remaining') }} minutes

            • Server Rack Backup Time Remaining: {{ states('sensor.server_rack_backup_time_remaining') }} minutes
            • Server Rack Main Battery: {{ states('sensor.server_rack_backup_main_battery') }}%
            • Server Rack Extra1 Battery: {{ states('sensor.server_rack_backup_extra1_battery') }}%
            • Server Rack Extra2 Battery: {{ states('sensor.server_rack_backup_extra2_battery') }}%

            Time: {{ now().strftime('%m/%d/%Y at %I:%M %p') }}

            Please check power status and take appropriate action.

  - id: 319350f9-c4b6-4030-ba68-e975b926828f
    alias: 'Server Rack Exhaust Fan Max Speed Control'
    description: >-
      Automatically adjusts the max fan speed based on temperature difference.
      Sets max speed to 100% when temperature difference exceeds 8°F, otherwise 85%.
    mode: restart
    triggers:
      - trigger: homeassistant
        event: start
      - trigger: event
        event_type: automation_reloaded
      - trigger: state
        entity_id: sensor.server_rack_exhaust_fan_temperature_1
      - trigger: state
        entity_id: climate.server_rack_exhaust_fan_fan_1_thermostat
        attribute: temperature
    conditions:
      - alias: "Safety check: Verify both temperature sensors are available before adjusting fan speed"
        condition: template
        value_template: >-
          {% set current_temp = states('sensor.server_rack_exhaust_fan_temperature_1') %}
          {% set target_temp = state_attr('climate.server_rack_exhaust_fan_fan_1_thermostat',
            'temperature') %}
          {{ current_temp != 'unavailable' and target_temp is not none }}
    actions:
      - alias: "Calculate temperature difference and set appropriate max fan speed"
        action: number.set_value
        target:
          entity_id: number.server_rack_exhaust_fan_fan_1_max_fan_speed
        data:
          value: >-
            {% set current_temp = states('sensor.server_rack_exhaust_fan_temperature_1') | float(0) %}
            {% set target_temp = state_attr('climate.server_rack_exhaust_fan_fan_1_thermostat',
              'temperature') | float(0) %}
            {% set temp_diff = current_temp - target_temp %}
            {% if temp_diff > 8 %}
              100
            {% else %}
              85
            {% endif %}
