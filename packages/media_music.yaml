###############################################################################
#  @author       :  Rohan Kapoor
#  @date         :  08/06/2018
#  @package      :  Media / Music
#  @description  :  Controls the Chromecast Audio devices and integrates them
#                   with Harmony. Speakers power on and off automatically
###############################################################################
---
homeassistant:
  customize:
    ################################################
    ## Node Anchors
    ################################################
    package.node_anchors:
      customize: &customize
        package: 'media_music'

      speaker: &speaker
        icon_template: mdi:speaker

      media_player_entity: &media_player_entity
        entity_id: media_player.all_speakers

      trigger_roku_keypress: &trigger_roku_keypress
        - platform: event
          event_type: roku_command

      roku_event_data: &roku_event_data
        source_name: 4t8k7RAjE3TBcfheQvCATZ
        type: keypress

      cover: &cover
        <<: *speaker
        position_template: 50

      decrement_volume: &decrement_volume
        increment: "{{ (states('input_number.volume_increment'))|int }}"

      increment_volume: &increment_volume
        <<: *decrement_volume
        vol_up: 'true'

      turn_on_speakers: &turn_on_speakers
        service: remote.turn_on
        data_template:
          entity_id: "{{ entity_id }}"
          activity: "{{ state_attr(entity_id, 'music_activity_id') }}"

    ################################################
    ## Remote
    ################################################
    remote.living_room_hub:
      <<: *customize
      location: 'Downstairs'
      music_activity_name: 'Listen to Music'
      music_activity_id: '22851881'
      volume_device: '55995993'

    remote.upstairs_hub:
      <<: *customize
      location: 'Upstairs'
      music_activity_name: 'Listen to Music on Speakers'
      music_activity_id: '32547827'
      pc_activity_name: 'Use PC on Speakers'
      pc_activity_id: '32547985'
      volume_device: '53194709'

    ################################################
    ## Input Number
    ################################################
    input_number.volume_increment:
      <<: *customize
    input_number.speakers_playing:
      <<: *customize

    ################################################
    ## Media Player
    ################################################
    media_player.upstairs_speakers_2:
      <<: *customize
    media_player.downstairs_speakers_2:
      <<: *customize

    ################################################
    ## Switch
    ################################################
    switch.upstairs_speakers:
      <<: *customize
    switch.upstairs_pc_speakers:
      <<: *customize
    switch.downstairs_speakers:
      <<: *customize

    ################################################
    ## Sensor
    ################################################
    sensor.all_speakers_media_title:
      <<: *customize
    sensor.all_speakers_media_artist:
      <<: *customize

    ################################################
    ## Automation
    ################################################
    automation.turn_on_speakers_if_chromecast_audio_playing:
      <<: *customize
    automation.turn_off_speakers_when_chromecast_audio_stops_playing:
      <<: *customize
    automation.playpause_chromecast_audio:
      <<: *customize
    automation.rewind_chromecast_audio:
      <<: *customize
    automation.skip_chromecast_audio:
      <<: *customize
    automation.restore_speakers_playing_at_startup:
      <<: *customize
    automation.evaluate_and_turn_off_speakers_when_presence_location_changes:
      <<: *customize

    ################################################
    ## Script
    ################################################
    script.harmony_volume:
      <<: *customize
    script.harmony_music_turn_on:
      <<: *customize
    script.harmony_music_turn_on_subsequent_times:
      <<: *customize
    script.harmony_music_turn_on_first_time:
      <<: *customize

################################################
## Emulated Roku
################################################
emulated_roku:
  servers:
    - name: !secret emulated_roku.name
      listen_port: !secret emulated_roku.listen_port
      host_ip: !secret emulated_roku.host_ip

################################################
## Media Player
################################################
media_player:
  - platform: universal
    name: All Speakers
    children:
      - media_player.whole_house

  - platform: universal
    name: Upstairs Speakers
    children:
      - media_player.all_speakers
      - media_player.upstairs_speakers
    commands:
      turn_on:
        service: switch.turn_on
        data:
          entity_id: switch.upstairs_speakers
      turn_off:
        service: switch.turn_off
        data:
          entity_id: switch.upstairs_speakers
      volume_up:
        service: script.harmony_volume
        data_template:
          <<: *increment_volume
          entity_id: remote.upstairs_hub
      volume_down:
        service: script.harmony_volume
        data_template:
          <<: *decrement_volume
          entity_id: remote.upstairs_hub
      volume_mute:
        service: media_player.volume_mute
        data_template:
          entity_id: media_player.upstairs_speakers
          is_volume_muted: "{{ not state_attr('media_player.upstairs_speakers', 'is_volume_muted') }}"
    attributes:
      state: switch.upstairs_speakers
      is_volume_muted: media_player.upstairs_speakers|is_volume_muted

  - platform: universal
    name: Downstairs Speakers
    children:
      - media_player.all_speakers
      - media_player.downstairs_speakers
      - media_player.denon_avr_x4300h
    commands:
      turn_on:
        service: switch.turn_on
        data:
          entity_id: switch.downstairs_speakers
      turn_off:
        service: switch.turn_off
        data:
          entity_id: switch.downstairs_speakers
      volume_up:
        service: media_player.volume_up
        data:
          entity_id: media_player.denon_avr_x4300h
      volume_down:
        service: media_player.volume_up
        data:
          entity_id: media_player.denon_avr_x4300h
      volume_mute:
        service: media_player.volume_mute
        data_template:
          entity_id: media_player.denon_avr_x4300h
          is_volume_muted: "{{ not state_attr('media_player.denon_avr_x4300h', 'is_volume_muted') }}"
      volume_set:
        service: media_player.volume_set
        data_template:
          entity_id: media_player.denon_avr_x4300h
          volume_level: '{{ volume_level }}'
    attributes:
      state: switch.downstairs_speakers
      volume_level: media_player.denon_avr_x4300h|volume_level
      is_volume_muted: media_player.denon_avr_x4300h|is_volume_muted

################################################
## Input Number
################################################
input_number:

  volume_increment:
    name: Increment
    initial: 3
    min: 1
    max: 10
    step: 1
    icon: mdi:volume-high

  speakers_playing:
    name: Speakers Playing
    initial: 0
    min: 0
    max: 2
    step: 1
    icon: mdi:speaker

################################################
## Switch
################################################
switch:
  - platform: template
    switches:

      upstairs_speakers:
        <<: *speaker
        friendly_name: "Upstairs Speakers"
        value_template: >
          {% set entity_id = "remote.upstairs_hub" %}
          {{ is_state_attr(entity_id, 'current_activity', state_attr(entity_id, 'music_activity_name')) }}
        turn_on:
          service: script.harmony_music_turn_on
          data:
            entity_id: remote.upstairs_hub
        turn_off:
          service: remote.turn_off
          data:
            entity_id: remote.upstairs_hub

      upstairs_pc_speakers:
        <<: *speaker
        friendly_name: "PC Speakers"
        value_template: >
          {% set entity_id = "remote.upstairs_hub" %}
          {{ is_state_attr(entity_id, 'current_activity', state_attr(entity_id, 'pc_activity_name')) }}
        turn_on:
          service: remote.turn_on
          data_template:
            entity_id: remote.upstairs_hub
            activity: "{{ state_attr('remote.upstairs_hub', 'pc_activity_id') }}"
        turn_off:
          service: remote.turn_off
          data:
            entity_id: remote.upstairs_hub

      downstairs_speakers:
        <<: *speaker
        friendly_name: "Downstairs Speakers"
        value_template: >
          {% set entity_id = "remote.living_room_hub" %}
          {{ is_state_attr(entity_id, 'current_activity', state_attr(entity_id, 'music_activity_name')) }}
        turn_on:
          service: script.harmony_music_turn_on
          data:
            entity_id: remote.living_room_hub
        turn_off:
          service: remote.turn_off
          data:
            entity_id: remote.living_room_hub

################################################
## Sensor
################################################
sensor:
  - platform: template
    sensors:

      all_speakers_media_title:
        friendly_name: Title
        value_template: "{{ state_attr('media_player.all_speakers', 'media_title') }}"

      all_speakers_media_artist:
        friendly_name: Artist
        value_template: "{{ state_attr('media_player.all_speakers', 'media_artist') }}"

      1second_silence_url:
        value_template: !secret media_content_id.1second_silence

################################################
## Automation
################################################
automation:

  ################################################
  ## Actions triggered by Chromecast Audio
  ################################################
  - id: turn_on_speakers_if_chromecast_audio_playing
    alias: Turn on Speakers if Chromecast Audio Playing
    trigger:
      - <<: *media_player_entity
        platform: state
        to: 'playing'
      - platform: state
        entity_id: input_select.last_presence_location
    condition:
      - condition: state
        <<: *media_player_entity
        state: 'playing'
      - condition: template
        value_template: >
          {{ not is_state_attr('media_player.all_speakers', 'media_content_id', states('sensor.1second_silence_url')) }}
      - condition: template
        # This should only evaluate to one remote
        value_template: >
          {%- for item in states.remote if (
            is_state_attr(item.entity_id, 'location', states('input_select.last_presence_location'))
            )
          -%}
            {{ is_state(item.entity_id, 'off') }}
          {%- endfor -%}
    action:
      - service: script.harmony_music_turn_on
        # This should only evaluate to one remote
        data_template:
          entity_id: >
            {%- for item in states.remote if (
              is_state_attr(item.entity_id, 'location', states('input_select.last_presence_location'))
              )
            -%}
              {{ item.entity_id }}
            {%- endfor -%}

  - id: turn_off_speakers_when_chromecast_audio_stops_playing
    alias: Turn off Speakers when Chromecast Audio Stops Playing
    trigger:
      - <<: *media_player_entity
        platform: state
        to: 'off'
        for:
          minutes: 10
      - <<: *media_player_entity
        platform: state
        to: 'paused'
        for:
          minutes: 10
      - <<: *media_player_entity
        platform: state
        to: 'idle'
        for:
          minutes: 10
    condition:
      condition: or
      conditions:
        - condition: state
          <<: *media_player_entity
          state: 'off'
        - condition: state
          <<: *media_player_entity
          state: 'paused'
        - condition: state
          <<: *media_player_entity
          state: 'idle'
    action:
      - service: python_script.media_music_turn_off_speakers
        data_template:
          entities: >
            {%- for item in states.remote if (
              state_attr(item.entity_id, 'location') is not none
              )
            -%}
              {{ item.entity_id }}{% if not loop.last %}, {% endif %}
            {%- endfor -%}

  # Check if active speakers are playing in a still populated location
  # Turns them off in not
  - id: evaluate_and_turn_off_speakers_when_presence_location_changes
    alias: Evaluate and Turn off Speakers when Presence Location Changes
    trigger:
      - platform: time_pattern
        minutes: '/5'
        seconds: 00
    action:
      service: python_script.media_music_turn_off_speakers
      data_template:
        entities: >
          {%- for sensor in states.sensor if (
            is_state_attr(sensor.entity_id, 'package', 'presence')
            and sensor.entity_id.endswith('_last_seen')
            and not is_state('input_select.last_presence_location', sensor.name.split(' ')[0])
            and (as_timestamp(now()) - as_timestamp(sensor.state) > (5 * 60))
            )
          -%}
            {%- for remote in states.remote if (
              is_state_attr(remote.entity_id, 'location', sensor.name.split(' ')[0])
              )
            -%}
              {{ remote.entity_id }}{% if not loop.last %}, {% endif %}
            {%- endfor -%}
          {%- endfor -%}

  ################################################
  ## Actions triggered by Harmony Remote
  ################################################
  - id: playpause_chromecast_audio
    alias: Play/Pause Chromecast Audio
    trigger:
      - <<: *trigger_roku_keypress
        event_data:
          <<: *roku_event_data
          key: Play
    action:
      - service: media_player.media_play_pause
        <<: *media_player_entity

  - id: rewind_chromecast_audio
    alias: Rewind Chromecast Audio
    trigger:
      - <<: *trigger_roku_keypress
        event_data:
          <<: *roku_event_data
          key: Rev
    action:
      - service: media_player.media_previous_track
        <<: *media_player_entity

  - id: skip_chromecast_audio
    alias: Skip Chromecast Audio
    trigger:
      - <<: *trigger_roku_keypress
        event_data:
          <<: *roku_event_data
          key: Fwd
    action:
      - service: media_player.media_next_track
        <<: *media_player_entity

  ################################################
  ## Restore state on startup
  ################################################
  - id: restore_speakers_playing_at_startup
    alias: Restore Speakers Playing at Startup
    trigger:
      - platform: homeassistant
        event: start
      - platform: event
        event_type: platform_discovered
        event_data:
          service: harmony
      - platform: time_pattern
        minutes: '/5'
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.speakers_playing
          value: >
            {%- for item in states.remote if (
              state_attr(item.entity_id, 'music_activity_name')
              and is_state(item.entity_id, 'on')
              and is_state_attr(item.entity_id, 'current_activity', state_attr(item.entity_id, 'music_activity_name'))
              )
            -%}
              {% if loop.last %}
                {{loop.index}}
              {% endif %}
            {% else %}
              0
            {%- endfor -%}

################################################
## Script
################################################
script:

  harmony_volume:
    alias: Harmony Volume Control
    sequence:
      - condition: template
        value_template: "{{ is_state(entity_id, 'on') }}"
      - condition: template
        value_template: "{{ state_attr(entity_id, 'volume_device') is not none }}"
      - service: remote.send_command
        data_template:
          entity_id: "{{ entity_id }}"
          command: "{{ 'VolumeUp' if vol_up == 'true' else 'VolumeDown' }}"
          device: "{{ state_attr(entity_id, 'volume_device') }}"
          num_repeats: "{{ increment|int or 3 }}"
          delay_secs: 0.25

  harmony_music_turn_on:
    alias: Turn on Speakers (music)
    sequence:
      - condition: template
        value_template: "{{ state_attr(entity_id, 'music_activity_id') is not none }}"
      - service_template: >
          {% if states('input_number.speakers_playing') | int == 0 %}
            script.harmony_music_turn_on_first_time
          {% else %}
            script.harmony_music_turn_on_subsequent_times
          {% endif %}
        data_template:
          entity_id: "{{ entity_id }}"
      - service: input_number.set_value
        data_template:
          entity_id: input_number.speakers_playing
          value: >
            {% set entity_id = 'input_number.speakers_playing' %}
            {% if states(entity_id) | int < state_attr(entity_id, 'max') %}
              {{ (states(entity_id) | int) + 1 }}
            {% else %}
              {{ states(entity_id) | int }}
            {% endif %}

  harmony_music_turn_on_subsequent_times:
    alias: Turn on Speakers (Music) Subsequent Times
    sequence:
      - <<: *turn_on_speakers

  harmony_music_turn_on_first_time:
    alias: Turn on Speakers (Music) First Time
    sequence:
      - service: media_player.media_pause
        <<: *media_player_entity
      - <<: *turn_on_speakers
      - wait_template: "{{ is_state(entity_id, 'on') }}"
        timeout: '00:00:08'
      - delay: '0:00:05'
      - service: media_player.media_play
        <<: *media_player_entity
